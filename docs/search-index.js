var searchIndex = JSON.parse('{\
"jadis":{"doc":"Introduction","t":[0,0,0,0,5,3,11,11,12,11,11,11,12,11,11,11,11,11,11,3,11,11,12,12,11,11,12,12,12,11,11,11,11,11,11,11,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,3,3,4,13,13,13,13,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,12,11,12,11,11,11,11,11,11,11,11,11,12,11],"n":["byte_reader","class_file","constant_pool","disassembler","main","ByteReader","borrow","borrow_mut","data","from","into","new","position","read_n_bytes","read_u16","read_u32","try_from","try_into","type_id","ClassFile","borrow","borrow_mut","constant_pool","constant_pool_count","from","into","magic","major_version","minor_version","new","read_constant_pool","read_magic_number","read_version","try_from","try_into","type_id","Class","ConstantPoolInfo","Double","Dynamic","FieldRef","Float","Integer","InterfaceMethodRef","InvokeDynamic","Long","MethodHandle","MethodRef","MethodType","Module","NameAndType","Package","String","Tag","Utf8","borrow","borrow","borrow_mut","borrow_mut","data","from","from","into","into","new","tag","try_from","try_from","try_into","try_into","type_id","type_id","DisassemberConfig","Disassembler","DisassemblerVisibility","PACKAGE","PRIVATE","PROTECTED","PUBLIC","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","class","config","from","from","from","into","into","into","new","new","show_assembly_instructions","show_final_constants","show_final_constants","show_instructions","show_line_numbers","show_line_numbers","show_system_info","show_system_info","show_type_signatures","show_type_signatures","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","visibility","with_visibility"],"q":["jadis","","","","","jadis::byte_reader","","","","","","","","","","","","","","jadis::class_file","","","","","","","","","","","","","","","","","jadis::constant_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jadis::disassembler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Simplifies reading bytes from binary files","Represents the JVM .class format","Represents an entity in the constant pool section of a …","Java Virtual Machine language disassembler","Application entry point","Binary file reader","","","Binary data as bytes","","","Create a new byte reader instance","Current read index into the byte buffer","Read N bytes from the current position in the binary blob","Read a u16 from the current pointer into the binary blob","Read a u32 from the current pointer into the binary blob","","","","JVM class file representation","","","Constant pool","Number of items in the constant pool plus one","","","Magic number - should always equal 0xCAFEBABE","Bytecode major version","Bytecode minor version","Create a new class file structure from a class file …","Read the entire constant pool","Read the magic number from a class file","Read the major and minor version from a class file","","","","Class structure","Represents an entity in the constant pool","Double value","Dynamically-computed entity","Reference to a field","Floating-point value","Integer value","Reference to an interface method","Dynamically-computed call site","Long value","Method handle","Reference to a method","Method type","Module","Name and type information","Package","Reference to a UTF-8 string","JVM constant pool info tag","UTF-8 string","","","","","Data associated with this entity","","","","","Create a new constant pool entity from a class file …","Identifies the type of data this entity represents","","","","","","","Data needed to create a disassembler","Java Virtual Machine disassembler","Controls which access level shows up in the output","Show package/protected/public classes and members …","Show all classes and members","Show protected/public classes and members","Show only public classes and members","","","","","","","Disassembled class file information","Used to customize the disassembler’s behaviour","","","","","","","Create a new disassember instance","","Show assembly instructions","Show final constants","Indicates whether final constants should be shown","Indicates whether assembly instructions should be shown","Show line numbers","Indicates whether line numbers should be shown","Show system information","Indicates whether system information should be shown","Show type signatures","Indicates whether type signatures should be shown","","","","","","","","","","Class and member visibility setting","Filter which visibility level should show up in the output"],"i":[0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,4,3,4,4,3,4,3,4,4,4,3,4,3,4,3,4,0,0,0,5,5,5,5,5,6,7,5,6,7,7,7,5,6,7,5,6,7,6,7,6,6,6,6,6,6,6,6,6,6,5,6,7,5,6,7,5,6,7,6,6],"f":[null,null,null,null,[[]],null,[[]],[[]],null,[[]],[[]],[[["str",15]]],null,[[["usize",15]]],[[],["u16",15]],[[],["u32",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],null,null,[[]],[[]],null,null,null,[[["bytereader",3]]],[[["bytereader",3]]],[[["bytereader",3]]],[[["bytereader",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[["bytereader",3]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bytereader",3],["disassemberconfig",3]]],[[]],[[]],null,null,[[]],null,[[]],null,[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["disassemblervisibility",4]]]],"p":[[3,"ByteReader"],[3,"ClassFile"],[4,"Tag"],[3,"ConstantPoolInfo"],[4,"DisassemblerVisibility"],[3,"DisassemberConfig"],[3,"Disassembler"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};