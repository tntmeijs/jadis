var searchIndex = JSON.parse('{\
"jadis":{"doc":"Introduction","t":[0,0,0,0,0,5,0,13,13,13,13,13,13,13,13,13,4,11,11,11,11,11,11,11,0,11,11,11,3,11,11,12,11,11,11,12,11,11,11,11,3,17,17,17,12,11,11,12,12,11,11,12,12,12,11,11,11,11,11,11,11,11,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,3,8,13,3,13,3,4,13,13,13,13,13,13,13,13,13,4,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,4,13,13,13,13,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,12,11,12,11,11,11,11,11,11,11,11,11,12,11,5,5,5,5,5,5,5],"n":["access_flags","byte_reader","class_file","constant_pool","disassembler","main","utils","AccAbstract","AccAnnotation","AccEnum","AccFinal","AccInterface","AccModule","AccPublic","AccSuper","AccSynthetic","AccessFlags","borrow","borrow_mut","eq","fmt","from","from_u16","into","tests","try_from","try_into","type_id","ByteReader","borrow","borrow_mut","data","from","into","new","position","read_n_bytes","try_from","try_into","type_id","ClassFile","MAGIC_NUMBER","SIZE_BYTES_U16","SIZE_BYTES_U32","access_flags","borrow","borrow_mut","constant_pool","constant_pool_count","from","into","magic","major_version","minor_version","new","read_access_flags","read_constant_pool","read_magic_number","read_u16","try_from","try_into","type_id","ConstantClass","ConstantClassInfo","ConstantDouble","ConstantDoubleInfo","ConstantDynamic","ConstantDynamicInfo","ConstantFieldRef","ConstantFieldRefInfo","ConstantFloat","ConstantFloatInfo","ConstantInteger","ConstantIntegerInfo","ConstantInterfaceMethodRef","ConstantInterfaceMethodRefInfo","ConstantInvokeDynamic","ConstantInvokeDynamicInfo","ConstantLong","ConstantLongInfo","ConstantMethodHandle","ConstantMethodHandleInfo","ConstantMethodRef","ConstantMethodRefInfo","ConstantMethodType","ConstantMethodTypeInfo","ConstantModule","ConstantModuleInfo","ConstantNameAndType","ConstantNameAndTypeInfo","ConstantPackage","ConstantPackageInfo","ConstantPoolInfo","ConstantPoolInfoData","ConstantString","ConstantStringInfo","ConstantUtf8","ConstantUtf8Info","MethodHandleType","RefGetField","RefGetStatic","RefInvokeInterface","RefInvokeSpecial","RefInvokeStatic","RefInvokeVirtual","RefNewInvokeSpecial","RefPutField","RefPutStatic","Tag","as_concrete_type","as_concrete_type","as_concrete_type","as_concrete_type","as_concrete_type","as_concrete_type","as_concrete_type","as_concrete_type","as_concrete_type","as_concrete_type","as_concrete_type","as_concrete_type","as_concrete_type","as_concrete_type","as_concrete_type","as_concrete_type","as_concrete_type","as_concrete_type","bootstrap_method_attr_index","bootstrap_method_attr_index","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class_index","class_index","class_index","data","descriptor_index","descriptor_index","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_kind","from_tag","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","length","name_and_type_index","name_and_type_index","name_and_type_index","name_and_type_index","name_and_type_index","name_index","name_index","name_index","name_index","new","read_data_as_class","read_data_as_double","read_data_as_dynamic","read_data_as_field_ref","read_data_as_float","read_data_as_integer","read_data_as_interface_method_ref","read_data_as_invoke_dynamic","read_data_as_long","read_data_as_method_handle","read_data_as_method_ref","read_data_as_method_type","read_data_as_module","read_data_as_name_and_type","read_data_as_package","read_data_as_string","read_data_as_utf8","reference_index","reference_kind","string","string_index","tag","try_cast_into_class","try_cast_into_double","try_cast_into_dynamic","try_cast_into_field_ref","try_cast_into_float","try_cast_into_integer","try_cast_into_interface_method_ref","try_cast_into_invoke_dynamic","try_cast_into_long","try_cast_into_method_handle","try_cast_into_method_ref","try_cast_into_method_type","try_cast_into_module","try_cast_into_name_and_type","try_cast_into_package","try_cast_into_string","try_cast_into_utf8","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","value","DisassemberConfig","Disassembler","DisassemblerVisibility","PACKAGE","PRIVATE","PROTECTED","PUBLIC","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","class","config","from","from","from","into","into","into","new","new","show_assembly_instructions","show_final_constants","show_final_constants","show_instructions","show_line_numbers","show_line_numbers","show_system_info","show_system_info","show_type_signatures","show_type_signatures","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","visibility","with_visibility","bitmask_matches","to_f32","to_f64","to_i32","to_i64","to_u16","to_u32"],"q":["jadis","","","","","","","jadis::access_flags","","","","","","","","","","","","","","","","","","","","","jadis::byte_reader","","","","","","","","","","","","jadis::class_file","","","","","","","","","","","","","","","","","","","","","","jadis::constant_pooljadis::disassembler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jadis::utils","","","","","",""],"d":["Contains class access and property modifiers","Simplifies reading bytes from binary files","Represents the JVM .class format","Represents an entity in the constant pool section of a …","Java Virtual Machine language disassembler","Application entry point","Contains useful common functionality and utilities","Declared abstract; must not be instantiated","Declared as an annotation interface","Declared as an enum class","Declared final; no subclasses allowed","Is an interface, not a class","Is a module, not a class or interface","Declared public; may be accessed from outside its package","Treat superclass methods specially when invoked by the <em>…","Declared synthetic; not present in the source code","Class access and property modifiers","","","","","","Fetch all active access flags from a value","","","","","","Binary file reader","","","Binary data as bytes","","","Create a new byte reader instance","Current read index into the byte buffer","Read N bytes from the current position in the binary blob","","","","JVM class file representation","","","","Class access and property modifiers","","","Constant pool","Number of items in the constant pool plus one","","","Magic number - should always equal 0xCAFEBABE","Bytecode major version","Bytecode minor version","Create a new class file structure from a class file …","Read the class access and property modifiers","Read the entire constant pool","Read the magic number (always 0xCAFEBABE)","Read a number (u16) from a binary blob","","","","Class structure","Constant pool class","Double value","Constant pool double","Dynamically-computed entity","Constant pool dynamic","Reference to a field","Constant pool field reference","Floating-point value","Constant pool float","Integer value","Constant pool integer","Reference to an interface method","Constant pool interface method reference","Dynamically-computed call site","Constant pool invoke dynamic","Long value","Constant pool long","Method handle","Constant pool method handle","Reference to a method","Constant pool method reference","Method type","Constant pool method type","Module","Constant pool module","Name and type information","Constant pool name and type","Package","Constant pool package","Represents an entity in the constant pool","Base trait to store specialised constant pool data entries","Reference to a UTF-8 string","Constant pool string","UTF-8 string","Constant pool UTF-8 string","Bytecode behaviours for method handles","getfield C.f:T","getstatic C.f:T","invokeinterface C.m:(A*)T","invokespecial C.m:(A*)T","invokestatic C.m:(A*)T","invokevirtual C.m:(A*)T","new C; dup; invokespecial C.:(A*)V","putfield C.f:T","putstatic C.f:T","Constant pool tags","Cast to the concreate type that implements this trait","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data associated with this entity","","","","","","","","","","","","","","","","","","","","","","","Convert a “kind” (u8) into its matching enum type, …","Convert a “tag” (u8) into its matching enum type, …","Index of this entry in the constant pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new constant pool entity from a class file …","Read the data blob as a class constant pool entry","Read the data blob as a double constant pool entry","Read the data blob as a dynamic constant pool entry","Read the data blob as a field reference constant pool …","Read the data blob as a float constant pool entry","Read the data blob as an integer constant pool entry","Read the data blob as an interface method reference …","Read the data blob as an invoke dynamic constant pool …","Read the data blob as a long constant pool entry","Read the data blob as a method handle constant pool entry","Read the data blob as a method reference constant pool …","Read the data blob as a method type constant pool entry","Read the data blob as a module constant pool entry","Read the data blob as a name and type constant pool entry","Read the data blob as a package constant pool entry","Read the data blob as a string constant pool entry","Read the data blob as an UTF-8 constant pool entry","","","","","Identifies the type of data this entity represents","Cast to a class constant pool entry","Cast to a double constant pool entry","Cast to a dynamic constant pool entry","Cast to a field reference constant pool entry","Cast to a float constant pool entry","Cast to an integer constant pool entry","Cast to an interface method reference constant pool entry","Cast to an invoke dynamic constant pool entry","Cast to a long constant pool entry","Cast to a method handle constant pool entry","Cast to a method reference constant pool entry","Cast to a method type constant pool entry","Cast to a module constant pool entry","Cast to a name and type constant pool entry","Cast to a package constant pool entry","Cast to a string constant pool entry","Cast to as an UTF-8 constant pool entry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data needed to create a disassembler","Java Virtual Machine disassembler","Controls which access level shows up in the output","Show package/protected/public classes and members …","Show all classes and members","Show protected/public classes and members","Show only public classes and members","","","","","","","Disassembled class file information","Used to customize the disassembler’s behaviour","","","","","","","Create a new disassember instance","","Show assembly instructions","Show final constants","Indicates whether final constants should be shown","Indicates whether assembly instructions should be shown","Show line numbers","Indicates whether line numbers should be shown","Show system information","Indicates whether system information should be shown","Show type signatures","Indicates whether type signatures should be shown","","","","","","","","","","Class and member visibility setting","Filter which visibility level should show up in the output","Checks if the specified bitmask is set","Create a new f32 from four bytes Byte order is assumed to …","Create a new i64 from four bytes Byte order is assumed to …","Create a new i32 from four bytes Byte order is assumed to …","Create a new i64 from four bytes Byte order is assumed to …","Create a new u16 from two bytes Byte order is assumed to …","Create a new u32 from four bytes Byte order is assumed to …"],"i":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,0,0,4,0,4,0,0,5,5,5,5,5,5,5,5,5,0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,20,21,4,5,24,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,4,5,24,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,14,15,16,24,17,19,4,5,24,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,5,4,24,4,5,24,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,7,14,15,16,20,21,12,17,22,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,18,18,7,13,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,4,5,24,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,4,5,24,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,4,5,24,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,8,9,10,11,0,0,0,25,25,25,25,25,26,27,25,26,27,27,27,25,26,27,25,26,27,26,27,26,26,26,26,26,26,26,26,26,26,25,26,27,25,26,27,25,26,27,26,26,0,0,0,0,0,0,0],"f":[null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["accessflags",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[["u16",15]],["vec",3]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],null,[[]],[[]],[[["str",15]]],null,[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],null,null,[[]],[[]],null,null,null,[[["bytereader",3]]],[[["bytereader",3]],[["accessflags",4],["vec",3]]],[[["bytereader",3],["u16",15]],[["vec",3],["constantpoolinfo",3]]],[[["bytereader",3]],["u32",15]],[[["bytereader",3]],["u16",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",15]]],[[["u8",15]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[["bytereader",3],["u16",15]]],[[["bytereader",3]],["constantclassinfo",3]],[[["bytereader",3]],["constantdoubleinfo",3]],[[["bytereader",3]],["constantdynamicinfo",3]],[[["bytereader",3]],["constantfieldrefinfo",3]],[[["bytereader",3]],["constantfloatinfo",3]],[[["bytereader",3]],["constantintegerinfo",3]],[[["bytereader",3]],["constantinterfacemethodrefinfo",3]],[[["bytereader",3]],["constantinvokedynamicinfo",3]],[[["bytereader",3]],["constantlonginfo",3]],[[["bytereader",3]],["constantmethodhandleinfo",3]],[[["bytereader",3]],["constantmethodrefinfo",3]],[[["bytereader",3]],["constantmethodtypeinfo",3]],[[["bytereader",3]],["constantmoduleinfo",3]],[[["bytereader",3]],["constantnameandtypeinfo",3]],[[["bytereader",3]],["constantpackageinfo",3]],[[["bytereader",3]],["constantstringinfo",3]],[[["bytereader",3]],["constantutf8info",3]],null,null,null,null,null,[[],[["option",4],["constantclassinfo",3]]],[[],[["option",4],["constantdoubleinfo",3]]],[[],[["option",4],["constantdynamicinfo",3]]],[[],[["option",4],["constantfieldrefinfo",3]]],[[],[["constantfloatinfo",3],["option",4]]],[[],[["constantintegerinfo",3],["option",4]]],[[],[["constantinterfacemethodrefinfo",3],["option",4]]],[[],[["constantinvokedynamicinfo",3],["option",4]]],[[],[["option",4],["constantlonginfo",3]]],[[],[["constantmethodhandleinfo",3],["option",4]]],[[],[["constantmethodrefinfo",3],["option",4]]],[[],[["option",4],["constantmethodtypeinfo",3]]],[[],[["option",4],["constantmoduleinfo",3]]],[[],[["option",4],["constantnameandtypeinfo",3]]],[[],[["option",4],["constantpackageinfo",3]]],[[],[["constantstringinfo",3],["option",4]]],[[],[["constantutf8info",3],["option",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bytereader",3],["disassemberconfig",3]]],[[]],[[]],null,null,[[]],null,[[]],null,[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["disassemblervisibility",4]]],[[["u16",15]],["bool",15]],[[],["f32",15]],[[],["f64",15]],[[],["i32",15]],[[],["i64",15]],[[],["u16",15]],[[],["u32",15]]],"p":[[4,"AccessFlags"],[3,"ByteReader"],[3,"ClassFile"],[4,"Tag"],[4,"MethodHandleType"],[8,"ConstantPoolInfoData"],[3,"ConstantUtf8Info"],[3,"ConstantIntegerInfo"],[3,"ConstantFloatInfo"],[3,"ConstantLongInfo"],[3,"ConstantDoubleInfo"],[3,"ConstantClassInfo"],[3,"ConstantStringInfo"],[3,"ConstantFieldRefInfo"],[3,"ConstantMethodRefInfo"],[3,"ConstantInterfaceMethodRefInfo"],[3,"ConstantNameAndTypeInfo"],[3,"ConstantMethodHandleInfo"],[3,"ConstantMethodTypeInfo"],[3,"ConstantDynamicInfo"],[3,"ConstantInvokeDynamicInfo"],[3,"ConstantModuleInfo"],[3,"ConstantPackageInfo"],[3,"ConstantPoolInfo"],[4,"DisassemblerVisibility"],[3,"DisassemberConfig"],[3,"Disassembler"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};